generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Card {
  id         Int        @id @default(autoincrement())
  platformId Int        @default(autoincrement()) @map("platform_id")
  isActive   Boolean?   @default(true) @map("is_active")
  platform   Platform   @relation(fields: [platformId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  page_card  PageCard[]

  @@map("card")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Page {
  id                       Int              @id @default(autoincrement())
  userId                   Int              @default(autoincrement()) @map("user_id")
  inspiredBy               Int              @default(autoincrement()) @map("inspired_by")
  views                    Decimal?         @default(0) @db.Decimal
  likes                    Decimal?         @default(0) @db.Decimal
  name                     String?          @db.VarChar(255)
  picture                  String?
  bio                      String?
  website                  String?          @db.VarChar(255)
  city                     String?          @db.VarChar(255)
  userPageInspiredByTouser User             @relation("pageInspiredByToUser", fields: [inspiredBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userPageUserIdTouser     User             @relation("pageUserIdToUser", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  page_card                PageCard[]
  page_technology          PageTechnology[]

  @@map("page")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Platform {
  id            Int             @id @default(autoincrement())
  icon          String?
  isActive      Boolean?        @default(true) @map("is_active")
  homepageUrl   String?         @map("homepage_url")
  name          String          @db.VarChar(255)
  card          Card[]
  socialAccount SocialAccount[]

  @@map("platform")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SocialAccount {
  id                Int      @id @default(autoincrement())
  userId            Int      @default(autoincrement()) @map("user_id")
  platformId        Int      @default(autoincrement()) @map("platform_id")
  isActive          Boolean? @default(true) @map("is_active")
  platformAccountId String   @map("platform_account_id") @db.VarChar(255)
  name              String?  @db.VarChar(255)
  bio               String?
  picture           String?
  website           String?  @db.VarChar(255)
  city              String?  @db.VarChar(255)
  platform          Platform @relation(fields: [platformId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user              User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("social_account")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Technology {
  id              Int              @id @default(autoincrement())
  icon            String?
  name            String           @db.VarChar(255)
  page_technology PageTechnology[]

  @@map("technology")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model User {
  id                       Int             @id @default(autoincrement())
  createdAt                DateTime        @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt                DateTime?       @default(now()) @map("updated_at") @db.Timestamptz(6)
  isActive                 Boolean?        @default(true) @map("is_active")
  picture                  String?
  bio                      String?
  website                  String?
  name                     String?         @db.VarChar(255)
  city                     String?         @db.VarChar(255)
  pagePageInspiredByToUser Page[]          @relation("pageInspiredByToUser")
  pagePageUserIdToUser     Page[]          @relation("pageUserIdToUser")
  socialAccount            SocialAccount[]

  @@map("user")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model PageCard {
  id        Int      @id(map: "page_card_pkey") @default(autoincrement())
  page_id   Int      @default(autoincrement())
  card_id   Int      @default(autoincrement())
  is_active Boolean? @default(true)
  page      Page     @relation(fields: [page_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  card      Card     @relation(fields: [card_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "page_card_card_id_fkey")

  @@map("page_card")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model PageTechnology {
  id            Int        @id @default(autoincrement())
  page_id       Int        @default(autoincrement())
  technology_id Int        @default(autoincrement())
  page          Page       @relation(fields: [page_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  technology    Technology @relation(fields: [technology_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "page_technology_technology_id_fkey")

  @@map("page_technology")
}
